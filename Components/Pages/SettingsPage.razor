@page "/settings"
@inject SettingsService SettingsService
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="card p-4" style="width: 400px;">
        <h3 class="text-center mb-4">Application Settings</h3>

        @if (_settings != null)
        {
            <EditForm Model="_settings" OnValidSubmit="SaveSettings">
                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger" />

                <div class="form-group mb-3">
                    <label for="storeId" class="form-label">Store ID:</label>
                    <InputNumber id="storeId" @bind-Value="_settings.StoreId" class="form-control form-control-sm" />
                </div>

                <div class="form-group mb-3">
                    <label for="storeUniqueId" class="form-label">Store Unique ID:</label>
                    <InputText id="storeUniqueId" @bind-Value="_storeUniqueIdString" class="form-control form-control-sm" />
                </div>

                <div class="form-group mb-3">
                    <label for="storeName" class="form-label">Store Name:</label>
                    <InputText id="storeName" @bind-Value="_settings.StoreName" class="form-control form-control-sm" />
                </div>

                <div class="form-group mb-3">
                    <label for="appVersion" class="form-label">App Version:</label>
                    <InputText id="appVersion" @bind-Value="_settings.AppVersion" class="form-control form-control-sm" />
                </div>

                <!-- Hidden Version Date -->
                <InputDate id="versionDate" @bind-Value="_settings.VersionDate" style="display: none;" />

                <div class="form-group mb-3">
                    <label for="startDate" class="form-label">Start Date:</label>
                    <InputDate id="startDate" @bind-Value="_settings.StartDate" class="form-control form-control-sm" @onchange="UpdateEndDate" />
                </div>

                <!-- Hidden End Date -->
                <InputDate id="endDate" @bind-Value="_settings.EndDate" style="display: none;" />

                <!-- Hidden Is Active Checkbox -->
                <InputCheckbox id="isActive" @bind-Value="_settings.IsActive" style="display: none;" />

                <button type="submit" class="btn btn-primary w-100">Save</button>
            </EditForm>
        }
    </div>
</div>

@code {
    private AppSettings? _settings = new AppSettings(); // Initialize with a default instance
    private string? _storeUniqueIdString;

    protected override async Task OnInitializedAsync()
    {
        _settings = await SettingsService.LoadSettingsAsync();

        _storeUniqueIdString = _settings.StoreUniqueId.ToString();
        UpdateEndDate(); // Set initial end date when loading settings
    }

    private async Task SaveSettings()
    {
        if (Guid.TryParse(_storeUniqueIdString, out var storeUniqueId))
        {
            _settings.StoreUniqueId = storeUniqueId;
        }

       // await SettingsService.SaveSettingsAsync(_settings);
        Navigation.NavigateTo("/");
    }

    private void UpdateEndDate()
    {
        // Set End Date to one year after Start Date
        if (_settings?.StartDate.HasValue == true)
        {
             _settings.EndDate = _settings.StartDate.Value.AddYears(1);
        }
    }
}
