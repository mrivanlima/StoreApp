@page "/Prescricao"
@inject IPrescriptionService PrescriptionService
@inject IMapper Mapper

<h3 class="text-primary mb-4">Manage Prescriptions</h3>

<hr />

<!-- List of Prescriptions -->
<h4 class="mt-4">Prescription List</h4>
<div class="prescription-list">
    @if (prescriptions != null && prescriptions.Any())
    {
        @foreach (var prescription in prescriptions)
        {
            <div class="prescription-card border p-3 mb-3 rounded">
                <!-- Show only the Created On date as a clickable link -->
                <a href="javascript:void(0)" @onclick="() => ViewPrescription(prescription.PrescriptionId)" class="text-info">
                    @prescription.CreatedOn.ToString("MM/dd/yyyy")
                </a>
            </div>
        }
    }
    else
    {
        <p>No prescriptions available.</p>
    }
</div>

<!-- Section to display prescription details -->
@if (selectedPrescription != null)
{
    <hr />
    <div class="prescription-details mt-4 border p-4 rounded">
        <h4>Prescription Details</h4>
        <img src="@selectedPrescription.PrescriptionUrl" alt="Prescription Image" class="prescription-image mb-3" />
        <p><strong>Prescription ID:</strong> @selectedPrescription.PrescriptionId</p>
        <p><strong>Quote ID:</strong> @selectedPrescription.QuoteId</p>
        <p><strong>Created By:</strong> @selectedPrescription.CreatedBy</p>
        <p><strong>Facility ID:</strong> @selectedPrescription.FacilityId</p>
        <p><strong>Professional ID:</strong> @selectedPrescription.ProfessionalId</p>
        <p><strong>Created On:</strong> @selectedPrescription.CreatedOn.ToString("MM/dd/yyyy")</p>
        <p><strong>Modified On:</strong> @selectedPrescription.ModifiedOn.ToString("MM/dd/yyyy")</p>
    </div>
}

@code {
    private IEnumerable<PrescriptionModel> prescriptions;
    private PrescriptionModel? selectedPrescription;

    protected override async Task OnInitializedAsync()
    {
        await LoadPrescriptions();
    }

    private async Task LoadPrescriptions()
    {
        var prescriptionEntities = await PrescriptionService.GetAllAsync();
        prescriptions = Mapper.Map<IEnumerable<PrescriptionModel>>(prescriptionEntities);
    }

    private async Task ViewPrescription(long prescriptionId)
    {
        var prescriptionEntity = await PrescriptionService.GetByIdAsync((int)prescriptionId);
        selectedPrescription = Mapper.Map<PrescriptionModel>(prescriptionEntity);
    }
}
